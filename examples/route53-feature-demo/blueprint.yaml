tosca_definitions_version: cloudify_dsl_1_3


description: >
  Example blueprint showing AWS Route53 functionality.


imports:
- http://www.getcloudify.org/spec/cloudify/3.4.2/types.yaml
- http://www.getcloudify.org/spec/aws-plugin/1.4.4/plugin.yaml
- https://raw.githubusercontent.com/cloudify-incubator/cloudify-boto3-plugin/dev/plugin.yaml


inputs:
  aws_access_key_id:
    type: string
  
  aws_secret_access_key:
    type: string
    
  aws_region_name:
    type: string
    default: us-east-1
    
  aws_vpc_id:
    description: |
      AWS VPC ID
    type: string


dsl_definitions:
  client_config: &client_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

  aws_config: &aws_config
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: aws_region_name }

node_templates:

  dns_record_set_2:
    type: cloudify.nodes.aws.route53.RecordSet
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          Action: CREATE
          ResourceRecordSet:
            Name: { concat: ["dev.", { get_property: [dns_hosted_zone, resource_id] }] }
            Type: !!str TXT
            TTL: !!int 60
            ResourceRecords:
            - Value: '"Created using Cloudify"'
    relationships:
    - type: cloudify.relationships.aws.route53.record_set.connected_to
      target: dns_hosted_zone

  dns_record_set_1:
    type: cloudify.nodes.aws.route53.RecordSet
    properties:
      client_config: *client_config
      resource_config:
        kwargs:
          Action: UPSERT
          ResourceRecordSet:
            Name: { concat: ["staging.", { get_property: [dns_hosted_zone, resource_id] }] }
            Type: !!str TXT
            TTL: !!int 60
            ResourceRecords:
            - Value: '"Created using Cloudify"'
    relationships:
    - type: cloudify.relationships.aws.route53.record_set.connected_to
      target: dns_hosted_zone

  dns_hosted_zone:
    type: cloudify.nodes.aws.route53.HostedZone
    properties:
      resource_id: !!str getcloudify.org
      client_config: *client_config
      resource_config:
        kwargs:
          HostedZoneConfig:
            Comment: !!str Cloudify-generated DNS Hosted Zone
            PrivateZone: !!bool true
    #interfaces:
    #  cloudify.interfaces.lifecycle:
    #    delete:
    #      inputs:
    #        force_delete: true
    relationships:
    - type: cloudify.relationships.aws.route53.hosted_zone.connected_to
      target: dns_vpc

  dns_vpc:
    type: cloudify.aws.nodes.VPC
    properties:
      use_external_resource: true
      resource_id: { get_input: aws_vpc_id }
      cidr_block:  N/A
      aws_config: *aws_config
